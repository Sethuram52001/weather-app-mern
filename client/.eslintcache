[{"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\index.js":"1","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\reportWebVitals.js":"2","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\App.js":"3","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Home\\Home.js":"4","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\WeatherCard\\WeatherCard.js":"5","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Forecast\\Forecast.js":"6","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\ForecastCard\\ForecastCard.js":"7","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Chart\\Chart.js":"8","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Error\\Error.js":"9","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCities\\MyCities.js":"10","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCityDetails\\MyCityDetails.js":"11","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\AppNavbar\\AppNavbar.js":"12","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\AddCity\\AddCity.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":913,"mtime":1611664607117,"results":"17","hashOfConfig":"15"},{"size":3967,"mtime":1611382791455,"results":"18","hashOfConfig":"15"},{"size":1789,"mtime":1611046624578,"results":"19","hashOfConfig":"15"},{"size":604,"mtime":1611235526979,"results":"20","hashOfConfig":"15"},{"size":621,"mtime":1611327564945,"results":"21","hashOfConfig":"15"},{"size":921,"mtime":1611329528617,"results":"22","hashOfConfig":"15"},{"size":180,"mtime":1611330290337,"results":"23","hashOfConfig":"15"},{"size":1308,"mtime":1611581936683,"results":"24","hashOfConfig":"15"},{"size":2372,"mtime":1611494137612,"results":"25","hashOfConfig":"15"},{"size":1248,"mtime":1611665665915,"results":"26","hashOfConfig":"15"},{"size":991,"mtime":1611669275519,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1sqk56y",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\index.js",[],["60","61"],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\reportWebVitals.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\App.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\WeatherCard\\WeatherCard.js",["62","63","64","65","66"],"import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./WeatherCard.css\";\r\n\r\nconst WeatherCard = ({ weatherInfo }) => {\r\n\r\n    const {\r\n        city,\r\n        country,\r\n        date,\r\n        description,\r\n        main,\r\n        temp,\r\n        sunset,\r\n        sunrise,\r\n        humidity,\r\n        wind,\r\n        highestTemp,\r\n        lowestTemp,\r\n        forecast,\r\n    } = weatherInfo;\r\n  \r\n    return ( \r\n        <div>\r\n          <div className=\"general-weather-card\">\r\n            <div className=\"text\">weather info: {city}</div>\r\n            <div className=\"text\">temp: {temp}</div>\r\n          </div>\r\n          <div className=\"weather-card\">\r\n            <div className=\"box\">\r\n              <div className=\"text\">lowest temp: {lowestTemp}</div>\r\n              <div className=\"text\">hightest temp: {highestTemp}</div>\r\n            </div>\r\n            <div className=\"box\">\r\n              <div className=\"text\">wind: {wind}</div>\r\n              <div className=\"text\">humidity: {humidity}</div>\r\n            </div>\r\n            <div className=\"box\">\r\n              <div className=\"text\">sunrise: {sunrise}</div>\r\n              <div className=\"text\">sunset: {sunset}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nWeatherCard.propTypes = {\r\n  weatherInfo: PropTypes.shape({\r\n    city: PropTypes.string,\r\n    country: PropTypes.string,\r\n    date: PropTypes.string,\r\n    description: PropTypes.string,\r\n    main: PropTypes.string,\r\n    temp: PropTypes.number,\r\n    sunrise: PropTypes.string,\r\n    sunset: PropTypes.string,\r\n    humidity: PropTypes.number,\r\n    wind: PropTypes.number,\r\n    highestTemp: PropTypes.number,\r\n    lowestTemp: PropTypes.number,\r\n    forecast: PropTypes.array,\r\n  }).isRequired,\r\n};\r\n \r\nexport default WeatherCard;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Forecast\\Forecast.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\ForecastCard\\ForecastCard.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Chart\\Chart.js",["67"],"import React, { Component } from 'react';\r\nimport { LineChart, XAxis, Tooltip, YAxis, Legend,  CartesianGrid, Line } from \"recharts\";\r\n\r\nconst Chart = ({forecastInfo}) => {\r\n\r\n    const data = forecastInfo;\r\n    console.log(forecastInfo);\r\n    \r\n    return ( \r\n        <div>\r\n            <LineChart width={1000} height={250} data={data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"dt_txt\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"main.temp\" stroke=\"#8884d8\" />\r\n                <Line type=\"monotone\" dataKey=\"main.humidity\" stroke=\"#82ca9d\" />\r\n                <Line type=\"monotone\" dataKey=\"wind.speed\" stroke=\"#ff0000\" />\r\n            </LineChart>        \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Chart;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Error\\Error.js",["68"],"import React, { Component } from 'react';\r\n\r\nconst Error = () => {\r\n    return ( \r\n        <div>\r\n            <p>Not found</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Error;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCities\\MyCities.js",["69"],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass MyCities extends Component {\r\n    state = { \r\n        cities: [\"Madurai\",\"Chennai\",\"Delhi\"]\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:5000/cities`)\r\n            .then(res => {\r\n                // let cities = res.map((value) => {\r\n                //     value.cityname\r\n                // })\r\n                console.log(res.data)\r\n                const resObj = res.data;\r\n                const cities = [];\r\n                resObj.map((value) => {\r\n                    console.log(value.cityname)\r\n                    cities.push(value.cityname)\r\n                });\r\n                console.log(cities);\r\n                this.setState({ cities });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    render() { \r\n        const { cities } = this.state;\r\n        const listItems = cities.map((city) =>\r\n            <li key={city.toString()}>\r\n                <Link to={`/my_city_details/${city}`}>{city}</Link>\r\n            </li>\r\n        );\r\n\r\n        return ( \r\n            <div>\r\n                <h1>My Cities</h1>\r\n                <ul>{listItems}</ul>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MyCities;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCityDetails\\MyCityDetails.js",["70","71"],"import React, { useEffect, useState } from 'react';\r\nimport config from \"../../config/config.json\";\r\nimport Chart from '../Chart/Chart';\r\nimport Forecast from '../Forecast/Forecast';\r\nimport WeatherCard from '../WeatherCard/WeatherCard';\r\n\r\nconst MyCityDetails = (props) => {\r\n\r\n    const [weatherInfo, setWeatherInfo] = useState(null);\r\n    const [forecastInfo, setforecastInfo] = useState(null);\r\n    const [toggle, handleToggle] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        const API_KEY = config.API_KEY;\r\n        const searchValue = props.match.params.id;\r\n        const weather = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&APPID=${API_KEY}&units=metric`;\r\n        const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${searchValue}&APPID=${API_KEY}&units=metric`;\r\n        const api_call = await fetch(weather);\r\n        const data = await api_call.json();\r\n        const api_call2 = await fetch(forecast);\r\n        const data2 = await api_call2.json();\r\n        const sunset = new Date(data.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\r\n        const sunrise = new Date(data.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\r\n        const date = (new Date()).toString();\r\n        const weatherInfo = {\r\n            city: data.name,\r\n            country: data.sys.country,\r\n            date,\r\n            description: data.weather[0].description,\r\n            temp: data.main.temp,\r\n            highestTemp: data.main.temp_max,\r\n            lowestTemp: data.main.temp_min,\r\n            sunrise,\r\n            sunset,\r\n            clouds: data.clouds.all,\r\n            humidity: data.main.humidity,\r\n            wind: data.wind.speed,\r\n            forecast: data2.list\r\n        }\r\n        setWeatherInfo(weatherInfo);\r\n        setforecastInfo(data2.list);\r\n    }, []);\r\n\r\n    const city = props.match.params.id;\r\n    console.log(\"my city details of: \"+city)\r\n    return ( \r\n        <div>\r\n            <h1>Hello there {city}</h1>\r\n            {weatherInfo && <WeatherCard weatherInfo={weatherInfo} />}\r\n            <button onClick={() => handleToggle(!toggle)}>toggle</button>\r\n            {(forecastInfo && !toggle) && <Forecast forecastInfo={forecastInfo} />}\r\n            {(forecastInfo && toggle) && <Chart forecastInfo={forecastInfo} />}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default MyCityDetails;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\AppNavbar\\AppNavbar.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\AddCity\\AddCity.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":9,"column":9,"nodeType":"78","messageId":"79","endLine":9,"endColumn":16},{"ruleId":"76","severity":1,"message":"80","line":10,"column":9,"nodeType":"78","messageId":"79","endLine":10,"endColumn":13},{"ruleId":"76","severity":1,"message":"81","line":11,"column":9,"nodeType":"78","messageId":"79","endLine":11,"endColumn":20},{"ruleId":"76","severity":1,"message":"82","line":12,"column":9,"nodeType":"78","messageId":"79","endLine":12,"endColumn":13},{"ruleId":"76","severity":1,"message":"83","line":20,"column":9,"nodeType":"78","messageId":"79","endLine":20,"endColumn":17},{"ruleId":"76","severity":1,"message":"84","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"84","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":19,"column":36,"nodeType":"87","messageId":"88","endLine":19,"endColumn":38},{"ruleId":"89","severity":1,"message":"90","line":13,"column":15,"nodeType":"87","endLine":42,"endColumn":6},{"ruleId":"89","severity":1,"message":"91","line":42,"column":8,"nodeType":"92","endLine":42,"endColumn":10,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'country' is assigned a value but never used.","Identifier","unusedVar","'date' is assigned a value but never used.","'description' is assigned a value but never used.","'main' is assigned a value but never used.","'forecast' is assigned a value but never used.","'Component' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [props.match.params.id]",{"range":"99","text":"100"},[1833,1835],"[props.match.params.id]"]