<<<<<<< HEAD
[{"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\index.js":"1","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\reportWebVitals.js":"2","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\App.js":"3","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Home\\Home.js":"4","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\WeatherCard\\WeatherCard.js":"5","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Forecast\\Forecast.js":"6","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\ForecastCard\\ForecastCard.js":"7","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Chart\\Chart.js":"8","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Error\\Error.js":"9","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCities\\MyCities.js":"10","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCityDetails\\MyCityDetails.js":"11","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\AppNavbar\\AppNavbar.js":"12","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\AddCity\\AddCity.js":"13","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Searchbar\\Searchbar.js":"14","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCityCard\\MyCityCard.js":"15","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\GeneralWeatherCard\\GeneralWeatherCard.js":"16","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Login\\Login.js":"17","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\GoogleLogin\\GoogleLogin.js":"18","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Profile\\Profile.js":"19","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\api\\googleAuth.js":"20","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\store.js":"21","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\reducers\\index.js":"22","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\reducers\\cityReducers.js":"23","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\types.js":"24","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\cityActions.js":"25","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\weatherActions.js":"26","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\index.js":"27","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\forecastActions.js":"28","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\reducers\\weatherReducer.js":"29","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\reducers\\forecastReducer.js":"30"},{"size":627,"mtime":1614068670757,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1170,"mtime":1613914859065,"results":"34","hashOfConfig":"32"},{"size":4513,"mtime":1615393887045,"results":"35","hashOfConfig":"32"},{"size":1860,"mtime":1612941381534,"results":"36","hashOfConfig":"32"},{"size":708,"mtime":1613022185145,"results":"37","hashOfConfig":"32"},{"size":990,"mtime":1612507331908,"results":"38","hashOfConfig":"32"},{"size":1307,"mtime":1615393804974,"results":"39","hashOfConfig":"32"},{"size":165,"mtime":1615393826764,"results":"40","hashOfConfig":"32"},{"size":1195,"mtime":1615393623765,"results":"41","hashOfConfig":"32"},{"size":1913,"mtime":1615393597736,"results":"42","hashOfConfig":"32"},{"size":1352,"mtime":1613915204418,"results":"43","hashOfConfig":"32"},{"size":707,"mtime":1615393739172,"results":"44","hashOfConfig":"32"},{"size":407,"mtime":1612939424004,"results":"45","hashOfConfig":"32"},{"size":3114,"mtime":1614070150662,"results":"46","hashOfConfig":"32"},{"size":674,"mtime":1614324290932,"results":"47","hashOfConfig":"32"},{"size":742,"mtime":1613914859089,"results":"48","hashOfConfig":"32"},{"size":1192,"mtime":1613914859081,"results":"49","hashOfConfig":"32"},{"size":965,"mtime":1613914859105,"results":"50","hashOfConfig":"32"},{"size":368,"mtime":1613914859073,"results":"51","hashOfConfig":"32"},{"size":206,"mtime":1614319979948,"results":"52","hashOfConfig":"32"},{"size":243,"mtime":1614320019510,"results":"53","hashOfConfig":"32"},{"size":901,"mtime":1614096752817,"results":"54","hashOfConfig":"32"},{"size":521,"mtime":1614273655060,"results":"55","hashOfConfig":"32"},{"size":1184,"mtime":1614097267863,"results":"56","hashOfConfig":"32"},{"size":2291,"mtime":1614328871207,"results":"57","hashOfConfig":"32"},{"size":171,"mtime":1614097062495,"results":"58","hashOfConfig":"32"},{"size":1133,"mtime":1615390243630,"results":"59","hashOfConfig":"32"},{"size":986,"mtime":1615390419796,"results":"60","hashOfConfig":"32"},{"size":994,"mtime":1614330308359,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1sqk56y",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\index.js",[],["129","130"],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\reportWebVitals.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\App.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\WeatherCard\\WeatherCard.js",["131","132","133","134","135","136","137"],"import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./WeatherCard.scss\";\r\n\r\nconst WeatherCard = ({ weatherInfo }) => {\r\n\r\n    const {\r\n        city,\r\n        country,\r\n        date,\r\n        description,\r\n        main,\r\n        temp,\r\n        sunset,\r\n        sunrise,\r\n        humidity,\r\n        wind,\r\n        highestTemp,\r\n        lowestTemp,\r\n        forecast,\r\n    } = weatherInfo;\r\n  \r\n    return ( \r\n        <div>\r\n          <div className=\"weather-card\">\r\n            <div className=\"box\">\r\n              <div className=\"text\">{lowestTemp}&deg;C</div>\r\n              <div className=\"text\">low</div>\r\n              <div className=\"text\">{highestTemp}&deg;C</div>\r\n              <div className=\"text\">high</div>\r\n            </div>\r\n            <div className=\"box\">\r\n              <div className=\"text\">{wind}</div>\r\n              <div className=\"text\">wind</div>\r\n              <div className=\"text\">{humidity}%</div>\r\n              <div className=\"text\">humidity</div>\r\n            </div>\r\n            <div className=\"box\">\r\n              <div className=\"text\">{sunrise} AM</div>\r\n              <div className=\"text\">sunrise</div>\r\n              <div className=\"text\">{sunset} PM</div>\r\n              <div className=\"text\">sunset</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nWeatherCard.propTypes = {\r\n  weatherInfo: PropTypes.shape({\r\n    city: PropTypes.string,\r\n    country: PropTypes.string,\r\n    date: PropTypes.string,\r\n    description: PropTypes.string,\r\n    main: PropTypes.string,\r\n    temp: PropTypes.number,\r\n    sunrise: PropTypes.string,\r\n    sunset: PropTypes.string,\r\n    humidity: PropTypes.number,\r\n    wind: PropTypes.number,\r\n    highestTemp: PropTypes.number,\r\n    lowestTemp: PropTypes.number,\r\n    forecast: PropTypes.array,\r\n  }).isRequired,\r\n};\r\n \r\nexport default WeatherCard;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Forecast\\Forecast.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\ForecastCard\\ForecastCard.js",["138","139"],"import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ForecastCard.scss\";\r\n\r\nconst ForecastCard = ({ item }) => {\r\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n  const day = item.dt_txt.slice(8, 10);\r\n  const month = item.dt_txt.slice(5, 7);\r\n  const hour = item.dt_txt.slice(11, 13) * 1;\r\n  const temp = item.main.temp;\r\n  const month_name = months[month - 1];\r\n  const main = item.weather[0].main;\r\n  const icon = item.weather[0].icon;\r\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\r\n\r\n    return ( \r\n        <div className=\"card\">\r\n            <div className=\"card-text\">{`${month_name} ${day}`}</div>\r\n            <div className=\"card-text\">{`${hour}:00`}</div>\r\n            <div className=\"card-text\">{`${temp} \\u00b0C`}</div>\r\n            <img src={iconUrl}></img>\r\n        </div>\r\n     );\r\n}\r\n\r\nForecastCard.propTypes = {\r\n  item: PropTypes.object\r\n}\r\n \r\nexport default ForecastCard;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Chart\\Chart.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Error\\Error.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCities\\MyCities.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCityDetails\\MyCityDetails.js",["140","141","142"],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\AppNavbar\\AppNavbar.js",["143"],"import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nconst AppNavbar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">reactstrap</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n                <NavLink>\r\n                    <Link to=\"/\">Home</Link>     \r\n                </NavLink>             \r\n            </NavItem>          \r\n            <NavItem>\r\n                <NavLink>\r\n                    <Link to=\"/my_cities\">My Cities</Link>\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>\r\n                    <Link to=\"/add_city\">Add City</Link>\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>\r\n                <Link to=\"/login\">Login</Link>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppNavbar;","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\AddCity\\AddCity.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Searchbar\\Searchbar.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\MyCityCard\\MyCityCard.js",["144","145","146"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport config from \"../../config/config.json\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./MyCityCard.scss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faCaretDown,\r\n    faCaretUp\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst MyCityCard = ({ city, handleDelete }) => {\r\n    const [temp, setTemp] = useState(0);\r\n    const [minTemp, setMinTemp] = useState(0);\r\n    const [maxTemp, setMaxTemp] = useState(0);\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [icon, setIcon] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    useEffect( async() => {\r\n        const API_KEY = config.API_KEY;\r\n        const weather = `https://api.openweathermap.org/data/2.5/weather?q=${city.cityname}&APPID=${API_KEY}&units=metric`;\r\n        const api_call = await fetch(weather);\r\n        const data = await api_call.json();\r\n        setTemp(data.main.temp);\r\n        setMinTemp(data.main.temp_min);\r\n        setMaxTemp(data.main.temp_max);\r\n        setDesc(data.weather[0].main);\r\n        setIcon(data.weather[0].icon);\r\n    }, []);\r\n\r\n    const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\r\n    // icon, temp, high temp, low temp, desc\r\n\r\n    return ( \r\n        <div onClick={() => {history.push(`/my_city_details/${city.cityname}`)}} className=\"my-city-card\">\r\n            <div className=\"card-title\">{city.cityname}</div>\r\n            {/* <FontAwesomeIcon icon={icon} /> */}\r\n            <img src={iconUrl} className=\"weather-img\"></img>\r\n            <div className=\"temp\">{temp}&deg;</div>\r\n            <div className=\"desc\">{desc}</div>\r\n            <div className=\"min-temp-block\">\r\n                <FontAwesomeIcon className=\"caret-down\" icon={faCaretDown} size=\"2x\"></FontAwesomeIcon>\r\n                <div className=\"min-temp\">{Math.round(minTemp)}&deg;</div>\r\n                <div className=\"min-temp-text\">Min</div>\r\n            </div>\r\n            <div className=\"max-temp-block\">\r\n                <FontAwesomeIcon className=\"caret-up\" icon={faCaretUp} size=\"2x\"></FontAwesomeIcon>\r\n                <div className=\"max-temp\">{Math.round(maxTemp)}&deg;</div>\r\n                <div className=\"max-temp-text\">Max</div>\r\n            </div>\r\n            <div><Link to={`/my_city_details/${city.cityname}`}>View</Link></div>\r\n            <button onClick={() => handleDelete(city.id)}>del</button>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default MyCityCard;\r\n\r\nMyCityCard.propTypes = {\r\n    city: PropTypes.shape({\r\n        cityname: PropTypes.string,\r\n        id: PropTypes.string\r\n    }),\r\n    handleDelete: PropTypes.func\r\n}\r\n\r\n/*\r\nopen weather icons: http://openweathermap.org/img/wn/10d@2x.png\r\n*/\r\n\r\n/*\r\n<div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n<div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n*/","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\GeneralWeatherCard\\GeneralWeatherCard.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Login\\Login.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\GoogleLogin\\GoogleLogin.js",["147"],"import React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { login } from '../../api/googleAuth';\r\nimport config from \"../../config/config.json\";\r\n\r\nexport default (props) => {\r\n  const responseGoogle = async (authResult) => {\r\n    try {\r\n      if (authResult['code']) {\r\n        const result = await login(authResult['code']);\r\n        console.log(authResult);\r\n        props.login(result);\r\n      } else {\r\n        throw new Error(authResult);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <GoogleLogin\r\n        // use your client id here\r\n        clientId={config.GOOGLE_CLIENT_ID}\r\n        buttonText=\"Login with google\"\r\n        responseType=\"code\"\r\n        /**\r\n         * To get access_token and refresh_token in server side,\r\n         * the data for redirect_uri should be postmessage.\r\n         * postmessage is magic value for redirect_uri to get credentials without actual redirect uri.\r\n         */\r\n        redirectUri=\"postmessage\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={'single_host_origin'}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\components\\Profile\\Profile.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\api\\googleAuth.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\store.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\reducers\\cityReducers.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\types.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\cityActions.js",["148"],"import axios from \"axios\";\r\nimport { GET_CITIES_BEGIN, GET_CITIES_SUCCESS, GET_CITIES_FAILURE } from \"./types\";\r\n\r\nexport const getCitiesBegin = () => ({\r\n    type: GET_CITIES_BEGIN\r\n});\r\n\r\nexport const getCitiesSuccess = cities => ({\r\n    type: GET_CITIES_SUCCESS,\r\n    payload: { cities }\r\n});\r\n\r\nexport const getCitiesFailure = error => ({\r\n    type: GET_CITIES_FAILURE,\r\n    payload: { error }\r\n});\r\n \r\nexport function getCities() {\r\n    return dispatch => {\r\n        dispatch(getCitiesBegin());\r\n        return axios.get(`/cities`)\r\n            .then((res) => {\r\n                const resObj = res.data;\r\n                const cities = [];\r\n                resObj.map((value) => {\r\n                    const city = {\r\n                        cityname: value.cityname,\r\n                        id: value._id\r\n                    }\r\n                    cities.push(city)\r\n                })\r\n                return cities\r\n            })\r\n            .then((cities) => {\r\n                console.log(cities)\r\n                dispatch(getCitiesSuccess(cities))\r\n                return cities\r\n            })\r\n            .catch(error => dispatch(getCitiesFailure(error)));\r\n    }\r\n}","C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\weatherActions.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\index.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\actions\\forecastActions.js",["149"],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\reducers\\weatherReducer.js",[],"C:\\Users\\sethu\\OneDrive\\Desktop\\Web-Dev\\Mern Stack\\weather-app-mern\\client\\src\\redux\\reducers\\forecastReducer.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":8,"column":9,"nodeType":"156","messageId":"157","endLine":8,"endColumn":13},{"ruleId":"154","severity":1,"message":"158","line":9,"column":9,"nodeType":"156","messageId":"157","endLine":9,"endColumn":16},{"ruleId":"154","severity":1,"message":"159","line":10,"column":9,"nodeType":"156","messageId":"157","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"160","line":11,"column":9,"nodeType":"156","messageId":"157","endLine":11,"endColumn":20},{"ruleId":"154","severity":1,"message":"161","line":12,"column":9,"nodeType":"156","messageId":"157","endLine":12,"endColumn":13},{"ruleId":"154","severity":1,"message":"162","line":13,"column":9,"nodeType":"156","messageId":"157","endLine":13,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":20,"column":9,"nodeType":"156","messageId":"157","endLine":20,"endColumn":17},{"ruleId":"154","severity":1,"message":"161","line":12,"column":9,"nodeType":"156","messageId":"157","endLine":12,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":21,"column":13,"nodeType":"166","endLine":21,"endColumn":32},{"ruleId":"167","severity":1,"message":"168","line":20,"column":15,"nodeType":"169","endLine":29,"endColumn":6},{"ruleId":"154","severity":1,"message":"159","line":26,"column":15,"nodeType":"156","messageId":"157","endLine":26,"endColumn":19},{"ruleId":"167","severity":1,"message":"170","line":29,"column":8,"nodeType":"171","endLine":29,"endColumn":10,"suggestions":"172"},{"ruleId":"154","severity":1,"message":"173","line":11,"column":3,"nodeType":"156","messageId":"157","endLine":11,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":20,"column":16,"nodeType":"169","endLine":30,"endColumn":6},{"ruleId":"167","severity":1,"message":"174","line":30,"column":8,"nodeType":"171","endLine":30,"endColumn":10,"suggestions":"175"},{"ruleId":"164","severity":1,"message":"165","line":39,"column":13,"nodeType":"166","endLine":39,"endColumn":56},{"ruleId":"176","severity":1,"message":"177","line":6,"column":1,"nodeType":"178","endLine":40,"endColumn":3},{"ruleId":"179","severity":1,"message":"180","line":25,"column":36,"nodeType":"169","messageId":"181","endLine":25,"endColumn":38},{"ruleId":"182","severity":1,"message":"183","line":32,"column":17,"nodeType":"184","messageId":"185","endLine":32,"endColumn":42},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'city' is assigned a value but never used.","Identifier","unusedVar","'country' is assigned a value but never used.","'date' is assigned a value but never used.","'description' is assigned a value but never used.","'main' is assigned a value but never used.","'temp' is assigned a value but never used.","'forecast' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["188"],"'NavbarText' is defined but never used.","React Hook useEffect has a missing dependency: 'city.cityname'. Either include it or remove the dependency array.",["189"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [props]",{"range":"194","text":"195"},"Update the dependencies array to be: [city.cityname]",{"range":"196","text":"197"},[1105,1107],"[props]",[1180,1182],"[city.cityname]"]
=======
[{"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/index.js":"1","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/reportWebVitals.js":"2","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/App.js":"3","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Home/Home.js":"4","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/MyCities/MyCities.js":"5","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Login/Login.js":"6","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/AddCity/AddCity.js":"7","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/MyCityDetails/MyCityDetails.js":"8","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/AppNavbar/AppNavbar.js":"9","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Forecast/Forecast.js":"10","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/WeatherCard/WeatherCard.js":"11","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Chart/Chart.js":"12","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Searchbar/Searchbar.js":"13","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/MyCityCard/MyCityCard.js":"14","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Error/Error.js":"15","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/GeneralWeatherCard/GeneralWeatherCard.js":"16","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Profile/Profile.js":"17","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/GoogleLogin/GoogleLogin.js":"18","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/ForecastCard/ForecastCard.js":"19","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/api/googleAuth.js":"20","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/AddCityCard/AddCityCard.js":"21"},{"size":501,"mtime":1617036733253,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1617036733253,"results":"24","hashOfConfig":"23"},{"size":1133,"mtime":1617036733217,"results":"25","hashOfConfig":"23"},{"size":5048,"mtime":1617122185022,"results":"26","hashOfConfig":"23"},{"size":1566,"mtime":1617038871124,"results":"27","hashOfConfig":"23"},{"size":705,"mtime":1617036733253,"results":"28","hashOfConfig":"23"},{"size":1017,"mtime":1617036733253,"results":"29","hashOfConfig":"23"},{"size":2507,"mtime":1617036733253,"results":"30","hashOfConfig":"23"},{"size":1300,"mtime":1617036733253,"results":"31","hashOfConfig":"23"},{"size":679,"mtime":1617036733253,"results":"32","hashOfConfig":"23"},{"size":1794,"mtime":1617036733253,"results":"33","hashOfConfig":"23"},{"size":1290,"mtime":1617036733253,"results":"34","hashOfConfig":"23"},{"size":391,"mtime":1617036733253,"results":"35","hashOfConfig":"23"},{"size":3083,"mtime":1617036733253,"results":"36","hashOfConfig":"23"},{"size":170,"mtime":1617036733253,"results":"37","hashOfConfig":"23"},{"size":684,"mtime":1617036733253,"results":"38","hashOfConfig":"23"},{"size":932,"mtime":1617036733253,"results":"39","hashOfConfig":"23"},{"size":1152,"mtime":1617036733253,"results":"40","hashOfConfig":"23"},{"size":961,"mtime":1617036733253,"results":"41","hashOfConfig":"23"},{"size":351,"mtime":1617036733217,"results":"42","hashOfConfig":"23"},{"size":270,"mtime":1617038914450,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"d5nrlw",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/index.js",[],["98","99"],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/reportWebVitals.js",[],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/App.js",[],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Home/Home.js",[],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/MyCities/MyCities.js",["100"],"import React, { Component } from 'react';\nimport axios from \"axios\";\nimport MyCityCard from \"../MyCityCard/MyCityCard\";\nimport \"./MyCities.scss\";\nimport AddCityCard from '../AddCityCard/AddCityCard';\n\nclass MyCities extends Component {\n    state = { \n        cities: []\n    }\n\n    componentDidMount() {\n        axios.get(`/cities`)\n            .then(res => {\n                console.log(res.data)\n                const resObj = res.data;\n                const cities = [];\n                resObj.map((value) => {\n                    const city = {\n                        cityname: value.cityname,\n                        id: value._id\n                    };\n                    cities.push(city)\n                });\n                console.log(cities);\n                this.setState({ cities });\n            })\n            .catch(err => console.log(err));\n    }\n\n    deleteCard = (id) => {\n        console.log(\"delete from mycities\");\n        console.log(id);\n        const { cities } = this.state;\n        const newCities = cities.filter(city => \n            city.id !== id\n        );\n        this.setState({ cities: newCities });\n        axios.delete(`/cities/${id}`);\n    }\n    \n    render() { \n        const { cities } = this.state;\n        const listItems = cities.map((city) =>\n            <MyCityCard id={city.id} city={city} handleDelete={this.deleteCard} className=\"my-city-card\" />\n        );\n\n        return ( \n            <div>\n                {listItems}\n                <AddCityCard />\n            </div>\n         );\n    }\n}\n \nexport default MyCities;","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Login/Login.js",[],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/AddCity/AddCity.js",["101"],"import React, { Component } from 'react';\nimport axios from \"axios\";\nimport SearchBar from \"material-ui-search-bar\";\nimport Searchbar from '../Searchbar/Searchbar';\n\nclass AddCity extends Component {\n    state = {\n        searchValue: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchValue: e.target.value });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        //const city = this.state.searchValue;\n        //this.setState({ city });\n        const city = {\n            cityname: e.target.elements.city.value\n        }\n        console.log(city);\n        axios.post('http://localhost:5000/cities/add', city)\n          .then(res => console.log(res.data))\n    }\n\n    render() { \n        return (\n            // <form onSubmit={this.handleSubmit}>\n            //     <input type=\"search\" onChange={this.handleChange} value={this.state.inputValue}></input>\n            // </form>\n            <Searchbar handleSubmit={this.handleSubmit} />\n        );\n    }\n}\n \nexport default AddCity;","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/MyCityDetails/MyCityDetails.js",["102","103"],"import React, { useEffect, useState } from 'react';\nimport config from \"../../config/config.json\";\nimport Chart from '../Chart/Chart';\nimport Forecast from '../Forecast/Forecast';\nimport WeatherCard from '../WeatherCard/WeatherCard';\n\nconst MyCityDetails = (props) => {\n\n    const [weatherInfo, setWeatherInfo] = useState(null);\n    const [forecastInfo, setforecastInfo] = useState(null);\n    const [toggle, handleToggle] = useState(null);\n\n    const handleClick = () => {\n        console.log(\"click was called\")\n        handleToggle(!toggle)\n    }\n\n    useEffect(async () => {\n        const API_KEY = config.API_KEY;\n        const searchValue = props.match.params.id;\n        const weather = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&APPID=${API_KEY}&units=metric`;\n        const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${searchValue}&APPID=${API_KEY}&units=metric`;\n        const api_call = await fetch(weather);\n        const data = await api_call.json();\n        const api_call2 = await fetch(forecast);\n        const data2 = await api_call2.json();\n        const sunset = new Date(data.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\n        const sunrise = new Date(data.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\n        const date = (new Date()).toString();\n        const weatherInfo = {\n            city: data.name,\n            country: data.sys.country,\n            date,\n            description: data.weather[0].description,\n            temp: data.main.temp,\n            highestTemp: data.main.temp_max,\n            lowestTemp: data.main.temp_min,\n            sunrise,\n            sunset,\n            clouds: data.clouds.all,\n            humidity: data.main.humidity,\n            wind: data.wind.speed,\n            forecast: data2.list\n        }\n        setWeatherInfo(weatherInfo);\n        setforecastInfo(data2.list);\n    }, []);\n\n    const city = props.match.params.id;\n    console.log(\"my city details of: \"+city)\n    return ( \n        <div>\n            <h1 className=\"title\">{city}</h1>\n            {weatherInfo && <WeatherCard weatherInfo={weatherInfo} />}\n            {/* <button onClick={() => handleToggle(!toggle)}>toggle</button> */}\n            {(forecastInfo && !toggle) && <Forecast handleClick={() => handleClick()} forecastInfo={forecastInfo} />}\n            {(forecastInfo && toggle) && <Chart handleClick={() => handleClick()} forecastInfo={forecastInfo} />}\n        </div>\n     );\n}\n \nexport default MyCityDetails;","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/AppNavbar/AppNavbar.js",["104"],"import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText\n} from 'reactstrap';\n\nconst AppNavbar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">reactstrap</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n                <NavLink>\n                    <Link to=\"/\">Home</Link>     \n                </NavLink>             \n            </NavItem>          \n            <NavItem>\n                <NavLink>\n                    <Link to=\"/my_cities\">My Cities</Link>\n                </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink>\n                    <Link to=\"/add_city\">Add City</Link>\n                </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink>\n                <Link to=\"/login\">Login</Link>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default AppNavbar;","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Forecast/Forecast.js",[],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/WeatherCard/WeatherCard.js",["105","106","107","108","109","110","111"],"import React from 'react';\nimport PropTypes from \"prop-types\";\nimport \"./WeatherCard.scss\";\n\nconst WeatherCard = ({ weatherInfo }) => {\n\n    const {\n        city,\n        country,\n        date,\n        description,\n        main,\n        temp,\n        sunset,\n        sunrise,\n        humidity,\n        wind,\n        highestTemp,\n        lowestTemp,\n        forecast,\n    } = weatherInfo;\n  \n    return ( \n        <div>\n          <div className=\"weather-card\">\n            <div className=\"box\">\n              <div className=\"text\">{lowestTemp}&deg;C</div>\n              <div className=\"text\">low</div>\n              <div className=\"text\">{highestTemp}&deg;C</div>\n              <div className=\"text\">high</div>\n            </div>\n            <div className=\"box\">\n              <div className=\"text\">{wind}</div>\n              <div className=\"text\">wind</div>\n              <div className=\"text\">{humidity}%</div>\n              <div className=\"text\">humidity</div>\n            </div>\n            <div className=\"box\">\n              <div className=\"text\">{sunrise} AM</div>\n              <div className=\"text\">sunrise</div>\n              <div className=\"text\">{sunset} PM</div>\n              <div className=\"text\">sunset</div>\n            </div>\n          </div>\n        </div>\n     );\n}\n\nWeatherCard.propTypes = {\n  weatherInfo: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    sunrise: PropTypes.string,\n    sunset: PropTypes.string,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    highestTemp: PropTypes.number,\n    lowestTemp: PropTypes.number,\n    forecast: PropTypes.array,\n  }).isRequired,\n};\n \nexport default WeatherCard;","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Chart/Chart.js",["112"],"import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { LineChart, XAxis, Tooltip, YAxis, Legend,  CartesianGrid, Line, ResponsiveContainer } from \"recharts\";\n\nconst Chart = ({forecastInfo,handleClick}) => {\n    const data = forecastInfo;\n    \n    return ( \n        <div style={{ width: \"100%\", height: 250 }}>\n            <h3 className=\"title\">Forecast</h3>\n            <button onClick={() => handleClick()}>toggle</button>\n            <ResponsiveContainer>\n                <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                    <CartesianGrid fill=\"white\" strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"dt_txt\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line name=\"temp\" type=\"monotone\" dataKey=\"main.temp\" stroke=\"#8884d8\" />\n                    <Line name=\"humidity\" type=\"monotone\" dataKey=\"main.humidity\" stroke=\"#82ca9d\" />\n                    <Line name=\"wind\" type=\"monotone\" dataKey=\"wind.speed\" stroke=\"#ff0000\" />\n                </LineChart>  \n            </ResponsiveContainer>\n        </div>\n     );\n}\n \nexport default Chart;\n\nChart.propTypes = {\n    forecastInfo: PropTypes.array,\n    handleClick: PropTypes.func\n}","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Searchbar/Searchbar.js",[],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/MyCityCard/MyCityCard.js",["113","114","115"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport config from \"../../config/config.json\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./MyCityCard.scss\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faCaretDown,\n    faCaretUp\n} from '@fortawesome/free-solid-svg-icons';\n\nconst MyCityCard = ({ city, handleDelete }) => {\n    const [temp, setTemp] = useState(0);\n    const [minTemp, setMinTemp] = useState(0);\n    const [maxTemp, setMaxTemp] = useState(0);\n    const [desc, setDesc] = useState(\"\");\n    const [icon, setIcon] = useState(\"\");\n    const history = useHistory();\n\n    useEffect( async() => {\n        const API_KEY = config.API_KEY;\n        const weather = `https://api.openweathermap.org/data/2.5/weather?q=${city.cityname}&APPID=${API_KEY}&units=metric`;\n        const api_call = await fetch(weather);\n        const data = await api_call.json();\n        console.log(data.weather[0].icon);\n        setTemp(data.main.temp);\n        setMinTemp(data.main.temp_min);\n        setMaxTemp(data.main.temp_max);\n        setDesc(data.weather[0].main);\n        setIcon(data.weather[0].icon);\n    }, []);\n\n    const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n    // icon, temp, high temp, low temp, desc\n\n    return ( \n        <div onClick={() => {history.push(`/my_city_details/${city.cityname}`)}} className=\"my-city-card\">\n            <div className=\"card-title\">{city.cityname}</div>\n            {/* <FontAwesomeIcon icon={icon} /> */}\n            <img src={iconUrl} className=\"weather-img\"></img>\n            <div className=\"temp\">{temp}&deg;</div>\n            <div className=\"desc\">{desc}</div>\n            <div className=\"min-temp-block\">\n                <FontAwesomeIcon className=\"caret-down\" icon={faCaretDown} size=\"2x\"></FontAwesomeIcon>\n                <div className=\"min-temp\">{Math.round(minTemp)}&deg;</div>\n                <div className=\"min-temp-text\">Min</div>\n            </div>\n            <div className=\"max-temp-block\">\n                <FontAwesomeIcon className=\"caret-up\" icon={faCaretUp} size=\"2x\"></FontAwesomeIcon>\n                <div className=\"max-temp\">{Math.round(maxTemp)}&deg;</div>\n                <div className=\"max-temp-text\">Max</div>\n            </div>\n            <div><Link to={`/my_city_details/${city.cityname}`}>View</Link></div>\n            <button onClick={() => handleDelete(city.id)}>del</button>\n        </div>\n    );\n}\n \nexport default MyCityCard;\n\nMyCityCard.propTypes = {\n    city: PropTypes.shape({\n        cityname: PropTypes.string,\n        id: PropTypes.string\n    }),\n    handleDelete: PropTypes.func\n}\n\n/*\nopen weather icons: http://openweathermap.org/img/wn/10d@2x.png\n*/\n\n/*\n<div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n<div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n*/","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Error/Error.js",["116"],"import React, { Component } from 'react';\n\nconst Error = () => {\n    return ( \n        <div>\n            <p>Not found</p>\n        </div>\n     );\n}\n \nexport default Error;","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/GeneralWeatherCard/GeneralWeatherCard.js",[],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/Profile/Profile.js",[],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/GoogleLogin/GoogleLogin.js",["117"],"import React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { login } from '../../api/googleAuth';\nimport config from \"../../config/config.json\";\n\nexport default (props) => {\n  const responseGoogle = async (authResult) => {\n    try {\n      if (authResult['code']) {\n        const result = await login(authResult['code']);\n        console.log(authResult);\n        props.login(result);\n      } else {\n        throw new Error(authResult);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <GoogleLogin\n        // use your client id here\n        clientId={config.GOOGLE_CLIENT_ID}\n        buttonText=\"Login with google\"\n        responseType=\"code\"\n        /**\n         * To get access_token and refresh_token in server side,\n         * the data for redirect_uri should be postmessage.\n         * postmessage is magic value for redirect_uri to get credentials without actual redirect uri.\n         */\n        redirectUri=\"postmessage\"\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        cookiePolicy={'single_host_origin'}\n      />\n    </div>\n  );\n};\n","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/ForecastCard/ForecastCard.js",["118","119"],"import React from 'react';\nimport PropTypes from \"prop-types\";\nimport \"./ForecastCard.scss\";\n\nconst ForecastCard = ({ item }) => {\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const day = item.dt_txt.slice(8, 10);\n  const month = item.dt_txt.slice(5, 7);\n  const hour = item.dt_txt.slice(11, 13) * 1;\n  const temp = item.main.temp;\n  const month_name = months[month - 1];\n  const main = item.weather[0].main;\n  const icon = item.weather[0].icon;\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n\n    return ( \n        <div className=\"card\">\n            <div className=\"card-text\">{`${month_name} ${day}`}</div>\n            <div className=\"card-text\">{`${hour}:00`}</div>\n            <div className=\"card-text\">{`${temp} \\u00b0C`}</div>\n            <img src={iconUrl}></img>\n        </div>\n     );\n}\n\nForecastCard.propTypes = {\n  item: PropTypes.object\n}\n \nexport default ForecastCard;","/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/api/googleAuth.js",[],"/home/sethuram/Desktop/Web-Dev/MERN Stack/weather-app-mern/client/src/components/AddCityCard/AddCityCard.js",["120"],"import React from 'react';\nimport {Link, withRouter} from \"react-router-dom\";\n\nconst AddCityCard = () => {\n    return ( \n        <div style={{background: \"white\"}}>\n            <Link to=\"/add_city\">click here</Link>\n        </div>\n     );\n}\n \nexport default AddCityCard;",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":18,"column":36,"nodeType":"127","messageId":"128","endLine":18,"endColumn":38},{"ruleId":"129","severity":1,"message":"130","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":18,"column":15,"nodeType":"127","endLine":47,"endColumn":6},{"ruleId":"133","severity":1,"message":"135","line":47,"column":8,"nodeType":"136","endLine":47,"endColumn":10,"suggestions":"137"},{"ruleId":"129","severity":1,"message":"138","line":11,"column":3,"nodeType":"131","messageId":"132","endLine":11,"endColumn":13},{"ruleId":"129","severity":1,"message":"139","line":8,"column":9,"nodeType":"131","messageId":"132","endLine":8,"endColumn":13},{"ruleId":"129","severity":1,"message":"140","line":9,"column":9,"nodeType":"131","messageId":"132","endLine":9,"endColumn":16},{"ruleId":"129","severity":1,"message":"141","line":10,"column":9,"nodeType":"131","messageId":"132","endLine":10,"endColumn":13},{"ruleId":"129","severity":1,"message":"142","line":11,"column":9,"nodeType":"131","messageId":"132","endLine":11,"endColumn":20},{"ruleId":"129","severity":1,"message":"143","line":12,"column":9,"nodeType":"131","messageId":"132","endLine":12,"endColumn":13},{"ruleId":"129","severity":1,"message":"144","line":13,"column":9,"nodeType":"131","messageId":"132","endLine":13,"endColumn":13},{"ruleId":"129","severity":1,"message":"145","line":20,"column":9,"nodeType":"131","messageId":"132","endLine":20,"endColumn":17},{"ruleId":"129","severity":1,"message":"146","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"133","severity":1,"message":"134","line":20,"column":16,"nodeType":"127","endLine":31,"endColumn":6},{"ruleId":"133","severity":1,"message":"147","line":31,"column":8,"nodeType":"136","endLine":31,"endColumn":10,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":40,"column":13,"nodeType":"151","endLine":40,"endColumn":56},{"ruleId":"129","severity":1,"message":"146","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"153","line":6,"column":1,"nodeType":"154","endLine":40,"endColumn":3},{"ruleId":"129","severity":1,"message":"143","line":12,"column":9,"nodeType":"131","messageId":"132","endLine":12,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":21,"column":13,"nodeType":"151","endLine":21,"endColumn":32},{"ruleId":"129","severity":1,"message":"155","line":2,"column":15,"nodeType":"131","messageId":"132","endLine":2,"endColumn":25},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["158"],"'NavbarText' is defined but never used.","'city' is assigned a value but never used.","'country' is assigned a value but never used.","'date' is assigned a value but never used.","'description' is assigned a value but never used.","'main' is assigned a value but never used.","'temp' is assigned a value but never used.","'forecast' is assigned a value but never used.","'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'city.cityname'. Either include it or remove the dependency array.",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [props.match.params.id]",{"range":"164","text":"165"},"Update the dependencies array to be: [city.cityname]",{"range":"166","text":"167"},[1901,1903],"[props.match.params.id]",[1194,1196],"[city.cityname]"]
>>>>>>> e510d75829dbd034bd026b99ac1469eadb5dbe3a
